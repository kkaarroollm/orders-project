apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.global.fullnameOverride }}-mongo-init-user
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mongo-init-user
          image: mongo:latest
          command:
            - bash
            - -c
            - |
              set -ex

              echo "======================================"
              echo "= Waiting for Mongo PRIMARY state... ="
              echo "======================================"

              for i in {1..30}; do
                if mongosh --host {{ .Values.global.fullnameOverride }}-mongo-0.{{ .Values.global.fullnameOverride }}-mongo-svc \
                  --eval 'rs.status().myState === 1' | grep true >/dev/null; then
                  echo "Mongo is PRIMARY"
                  break
                fi
                echo "Still waiting for PRIMARY..."
                sleep 2
              done

              echo "==================================="
              echo "= Creating root user if needed... ="
              echo "==================================="

              mongosh --host {{ .Values.global.fullnameOverride }}-mongo-0.{{ .Values.global.fullnameOverride }}-mongo-svc \
                --eval "
                  db = db.getSiblingDB('admin');
                  if (db.getUser('${MONGO_INITDB_ROOT_USERNAME}') == null) {
                    db.createUser({
                      user: '${MONGO_INITDB_ROOT_USERNAME}',
                      pwd: '${MONGO_INITDB_ROOT_PASSWORD}',
                      roles: [ { role: 'root', db: 'admin' } ]
                    });
                    print('Root user created.');
                  } else {
                    print('Root user already exists.');
                  }
                "
          envFrom:
            - secretRef:
                name: {{ .Values.global.fullnameOverride }}-mongo-auth
            - configMapRef:
                name: {{ .Values.global.fullnameOverride }}-mongo-config