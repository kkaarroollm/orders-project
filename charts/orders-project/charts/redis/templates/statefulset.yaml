apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.fullnameOverride  }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "orders-project.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Values.global.fullnameOverride  }}-redis-svc
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          args:
            - "--requirepass"
            - "$(REDIS_PASSWORD)"
            - "--appendonly"
            - "yes"
            - "--appendfsync"
            - "everysec"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.fullnameOverride  }}-redis-auth
                  key: REDIS_PASSWORD
          volumeMounts:
            - name: redis-storage
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: redis-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
