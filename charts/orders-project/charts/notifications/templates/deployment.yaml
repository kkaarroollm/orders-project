apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.fullnameOverride }}-notifications
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "orders-project.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: notifications
  template:
    metadata:
      labels:
        app: notifications
    spec:
      containers:
        - name: notifications
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.containerPort }}
          envFrom:
            - configMapRef:
                name: {{ .Values.global.fullnameOverride }}-redis-config
            - configMapRef:
                name: {{ .Values.global.fullnameOverride }}-notifications-config
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.fullnameOverride }}-redis-auth
                  key: REDIS_PASSWORD
            - name: REDIS_URL
              value: redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)
          startupProbe:
            httpGet:
              path: /health/readiness
              port: {{ .Values.containerPort }}
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 20
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: {{ .Values.containerPort }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: {{ .Values.containerPort }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 2
